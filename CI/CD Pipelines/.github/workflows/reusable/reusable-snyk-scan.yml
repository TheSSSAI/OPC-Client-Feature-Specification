# reusable-snyk-scan.yml
# This reusable workflow performs security vulnerability scanning using Snyk.
# It scans open-source dependencies and application code.
# REQ-1-086: Enforces quality gates.

name: 'Reusable Workflow: Snyk Security Scan'

on:
  workflow_call:
    inputs:
      dotnet-version:
        description: 'The version of the .NET SDK to use for setup.'
        required: false
        type: string
        default: '8.0.x'
      severity-threshold:
        description: 'The minimum vulnerability severity to fail on (low, medium, high, critical).'
        required: false
        type: string
        default: 'high'
    secrets:
      snyk-token:
        description: 'The Snyk API token for authentication.'
        required: true

jobs:
  snyk-scan:
    name: Snyk Vulnerability Scan
    runs-on: ubuntu-latest

    permissions:
      contents: read # Required to checkout the code for scanning.
      security-events: write # Required to upload scan results to GitHub Security tab.

    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Snyk Code works best with full history

      - name: 'Setup .NET SDK'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: 'Run Snyk to check for vulnerabilities'
        uses: snyk/actions/dotnet@master
        continue-on-error: true # Allow the workflow to continue to upload results even if vulnerabilities are found
        env:
          SNYK_TOKEN: ${{ secrets.snyk-token }}
        with:
          args: >
            --all-projects
            --fail-on=upgradable
            --severity-threshold=${{ inputs.severity-threshold }}
            --sarif-file-output=snyk.sarif

      - name: 'Upload Snyk SARIF results'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif