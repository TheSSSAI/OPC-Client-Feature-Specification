# Default values for application chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overridden in the CD pipeline with the git SHA
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Resource requests and limits
# We are following best practices by specifying resource requests and limits.
# This allows Kubernetes to schedule pods efficiently and handle load.
# These values should be tuned per service.
resources:
  limits:
    cpu: 250m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Autoscaling configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Health Checks (Liveness and Readiness Probes) as per REQ-1-091
# These are critical for production readiness, ensuring Kubernetes knows
# when the application is running and when it is ready to receive traffic.
probes:
  liveness:
    enabled: true
    path: "/healthz"
    initialDelaySeconds: 15
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 3
  readiness:
    enabled: true
    path: "/readyz"
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

# Environment variables to be injected into the container.
# This can be a mix of plain values, values from secrets, or configmaps.
env:
  # plain text values
  - name: ASPNETCORE_ENVIRONMENT
    value: "Production"
  # values from secrets
  # - name: DB_PASSWORD
  #   valueFrom:
  #     secretKeyRef:
  #       name: my-app-secrets
  #       key: database-password

# Canary deployment specific configuration
# This allows for a second deployment alongside the stable one for testing.
canary:
  enabled: false
  image:
    repository: ""
    tag: ""
  # Weight for traffic splitting (e.g., 10 for 10%)
  weight: 0

nodeSelector: {}

tolerations: []

affinity: {}