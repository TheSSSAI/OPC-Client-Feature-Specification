{'story_metadata': {'story_id': 'US-018', 'elaboration_date': '2025-01-15', 'development_readiness': 'Complete'}, 'story_narrative': {'title': 'Configure and Establish a Secure Connection to an OPC UA Server', 'as_a_user_story': 'As an Engineer, I want to configure and establish a secure, authenticated connection to an OPC UA server, including managing security policies and certificates, so that I can enable the OPC Core Client to securely access data from modern industrial control systems.', 'user_persona': 'Engineer: A technical user responsible for configuring data sources, tags, and system integrations. Familiar with industrial protocols and security concepts.', 'business_value': 'Enables the primary data acquisition function of the system for modern OPC UA-compliant devices. This is a foundational capability required for all subsequent data monitoring, analysis, and AI/ML features.', 'functional_area': 'Data Source Configuration', 'story_theme': 'Core OPC Connectivity'}, 'acceptance_criteria': [{'criteria_id': 'AC-001', 'scenario': 'Successful connection with SignAndEncrypt security and Username/Password authentication', 'scenario_type': 'Happy_Path', 'given': "I am an authenticated Engineer on the Central Management Plane's data source configuration page", 'when': "I enter a valid OPC UA server endpoint URL, select the 'SignAndEncrypt' message security mode, choose a supported security policy (e.g., 'Basic256Sha256'), provide valid username and password credentials, and save the configuration", 'then': "The configuration is securely pushed to the target OPC Core Client, a secure connection is established, and the UI displays a 'Connected' status for that data source within 30 seconds.", 'validation_notes': 'Test against a configured OPC UA server. Verify connection status in the UI and check client logs for successful session creation.'}, {'criteria_id': 'AC-002', 'scenario': 'Handling an untrusted server certificate', 'scenario_type': 'Alternative_Flow', 'given': "I attempt to connect to an OPC UA server whose certificate is not in the client's trust list", 'when': 'The OPC Core Client attempts the connection', 'then': "The connection fails, and the Central Management Plane UI displays a 'Connection Failed: Untrusted Server Certificate' status.", 'and': "The UI presents the details of the server's certificate and provides an 'Accept and Trust' button for an Administrator or Engineer to approve it.", 'validation_notes': 'Use an OPC UA server with a new, untrusted certificate. Verify the specific error is shown and that the trust mechanism works.'}, {'criteria_id': 'AC-003', 'scenario': 'Handling a client certificate rejected by the server', 'scenario_type': 'Error_Condition', 'given': "The OPC Core Client's application certificate is not in the target OPC UA server's trust list", 'when': 'The client attempts to connect using a secure policy', 'then': "The connection fails, and the UI displays a clear, actionable error message: 'Connection Failed: Client certificate is not trusted by the server. Please provide the client certificate to the server administrator.'", 'validation_notes': "Ensure the client's certificate is not trusted on the test server. Verify the specific error message is displayed."}, {'criteria_id': 'AC-004', 'scenario': 'Attempting to connect to an invalid or unreachable endpoint', 'scenario_type': 'Error_Condition', 'given': 'I am configuring an OPC UA connection', 'when': 'I enter an IP address or hostname that is unreachable and attempt to connect', 'then': "The connection attempt times out after a configurable period (default 15 seconds) and the UI displays a 'Connection Failed: Endpoint unreachable' error.", 'validation_notes': 'Use a non-existent IP address. Verify the timeout behavior and the specific error message.'}, {'criteria_id': 'AC-005', 'scenario': 'Authentication failure due to incorrect credentials', 'scenario_type': 'Error_Condition', 'given': 'I am configuring a connection that requires Username/Password authentication', 'when': 'I provide an incorrect username or password', 'then': "The connection fails and the UI displays a 'Connection Failed: Invalid username or password' error.", 'validation_notes': 'Use valid endpoint but invalid credentials. Verify the specific authentication error is returned and displayed.'}, {'criteria_id': 'AC-006', 'scenario': 'Security policy mismatch between client and server', 'scenario_type': 'Error_Condition', 'given': 'I configure the client to use a security policy that is disabled or not supported by the server', 'when': 'The client attempts to connect', 'then': "The connection fails and the UI displays a 'Connection Failed: No matching security policy found on server' error.", 'validation_notes': 'Configure the test server to only allow a specific policy, then attempt to connect from the client with a different one.'}, {'criteria_id': 'AC-007', 'scenario': 'Editing an existing OPC UA connection configuration', 'scenario_type': 'Happy_Path', 'given': 'An OPC UA connection is already configured and is currently active', 'when': 'I edit the connection parameters (e.g., update the password) and save the changes', 'then': 'The existing connection is gracefully disconnected, the new configuration is applied, and the client re-establishes the connection with the new parameters.', 'validation_notes': 'Modify an active connection and verify it reconnects successfully with the new settings.'}], 'user_interface_requirements': {'ui_elements': ['Form for adding/editing OPC UA connections.', "Input field for 'Endpoint URL'.", "Dropdown for 'Message Security Mode' (None, Sign, SignAndEncrypt).", "Dropdown for 'Security Policy' (e.g., Basic256Sha256, Aes128_Sha256_RsaOaep).", "Dropdown for 'Authentication Type' (Anonymous, Username/Password, Certificate).", "Conditional input fields for 'Username' and 'Password'.", "A 'Test Connection' button to validate settings before saving.", 'A modal/dialog to display untrusted certificate details and provide a trust action.', 'Clear status indicator (e.g., green for connected, red for error, yellow for connecting).'], 'user_interactions': ['Selecting an authentication type dynamically shows/hides relevant input fields.', "Clicking 'Test Connection' provides immediate feedback without closing the configuration form.", 'Error messages are displayed close to the relevant field or as a non-dismissible banner.'], 'display_requirements': ['The current connection status and any error messages must be clearly visible on the data source list and the configuration page.', 'For untrusted certificates, key details like Subject, Issuer, and Thumbprint must be displayed.'], 'accessibility_needs': ['All form fields must have associated labels.', 'Status indicators must use both color and text/icons to convey meaning, compliant with WCAG 2.1 AA.']}, 'business_rules': [{'rule_id': 'BR-001', 'rule_description': 'User credentials (e.g., passwords) for OPC UA connections must never be stored in plain text in the configuration database.', 'enforcement_point': 'Backend configuration service, upon saving the connection details.', 'violation_handling': 'Credentials must be encrypted or, preferably, stored as secrets in a dedicated vault like AWS Secrets Manager (as per REQ-NFR-003).'}, {'rule_id': 'BR-002', 'rule_description': "Connections with 'None' for Message Security Mode should display a prominent warning in the UI about the insecure nature of the connection.", 'enforcement_point': "Frontend UI, when 'None' is selected or displayed.", 'violation_handling': 'Display a warning icon and tooltip next to the connection status.'}], 'dependencies': {'prerequisite_stories': [{'story_id': 'US-051', 'dependency_reason': 'The mechanism to securely push configuration updates from the Central Management Plane to the distributed OPC Core Client must exist before a connection configuration can be applied.'}, {'story_id': 'US-047', 'dependency_reason': "A user account with the 'Engineer' role must be creatable to perform the actions in this story."}], 'technical_dependencies': ['OPCFoundation.NetStandard.Opc.Ua library for .NET.', 'A backend service to persist connection configurations.', 'Integration with a secrets management system (e.g., AWS Secrets Manager) for storing credentials.', 'The gRPC/MQTT communication channel (REQ-ARC-001) for transmitting configuration to the edge client.'], 'data_dependencies': ['Requires access to a live or simulated OPC UA server for testing.'], 'external_dependencies': []}, 'non_functional_requirements': {'performance': ['Connection attempt should time out within 15 seconds if the server is unreachable.', 'UI feedback on connection status change should appear within 3 seconds of the event occurring at the client.'], 'security': ['The implementation must correctly enforce the selected OPC UA security policy and message security mode.', 'All credentials must be encrypted in transit (TLS 1.3) and at rest (AWS Secrets Manager).', 'The certificate trust process must require explicit user action by an authorized role.'], 'usability': ['Error messages must be clear, concise, and provide actionable advice to the Engineer.', 'The configuration process should be intuitive for someone familiar with OPC UA concepts.'], 'accessibility': ['The configuration form must be keyboard-navigable and compliant with WCAG 2.1 AA standards.'], 'compatibility': ['Must be compatible with OPC UA servers adhering to the OPC UA 1.04 specification.']}, 'implementation_considerations': {'complexity_assessment': 'Medium', 'complexity_factors': ['Correctly implementing the OPC UA certificate management lifecycle (generation, storage, trust validation) is non-trivial.', 'The distributed nature of the system (configuration in the cloud, execution at the edge) requires a robust and secure communication channel for configuration updates.', 'Providing clear and accurate error states for a wide range of potential OPC UA connection issues.'], 'technical_risks': ['Mismanagement of certificates could lead to security vulnerabilities or connection failures that are difficult to diagnose.', 'Variances in OPC UA server implementations from different vendors may require handling specific edge cases.'], 'integration_points': ["Central Management Plane's configuration database.", 'AWS Secrets Manager.', "OPC Core Client's connection management module.", 'Third-party OPC UA Servers.']}, 'testing_requirements': {'testing_types': ['Unit', 'Integration', 'E2E', 'Security'], 'test_scenarios': ['Connect with all supported security and authentication modes.', 'Validate the full certificate trust workflow (client trusts server, server trusts client).', 'Test all defined error conditions (invalid endpoint, bad credentials, security mismatch, etc.).', 'Test connection resilience (e.g., what happens if the network is temporarily lost and then restored).'], 'test_data_needs': ['Access to a configurable OPC UA test server (e.g., Prosys Simulation Server).', 'Multiple user accounts with different credentials.', 'Self-signed certificates for testing trust workflows.'], 'testing_tools': ['xUnit/Moq for backend unit tests.', 'An OPC UA test server.', 'Playwright for E2E UI testing.']}, 'definition_of_done': ['All acceptance criteria validated and passing against a test OPC UA server.', 'Code reviewed and approved by at least one other developer.', 'Unit and integration tests implemented with >80% coverage for new code.', 'E2E tests for the happy path and key error conditions are automated and passing.', 'Security review confirms credentials and certificates are handled securely.', 'User documentation for configuring an OPC UA connection is created/updated.', 'Story deployed and verified in the staging environment.'], 'planning_information': {'story_points': '8', 'priority': 'High', 'sprint_considerations': ['This is a foundational story for a major feature set. It is likely to be a blocker for other stories related to data acquisition (e.g., US-001, US-002).', 'The development team will require access to a configurable OPC UA test environment from day one of the sprint.'], 'release_impact': 'This feature is critical for the minimum viable product (MVP) as it enables connectivity to the most common modern industrial data sources.'}}