{'story_metadata': {'story_id': 'US-007', 'elaboration_date': '2025-01-15', 'development_readiness': 'Complete'}, 'story_narrative': {'title': 'View Active Alarms', 'as_a_user_story': 'As an Operator, I want to view a real-time, filterable, and sortable list of all active alarms so that I can quickly identify, prioritize, and respond to critical process issues to maintain operational safety and efficiency.', 'user_persona': 'Operator: A user responsible for day-to-day monitoring of industrial processes, viewing data, and responding to alarms. They require clear, timely, and actionable information.', 'business_value': 'Enhances operational situational awareness, enabling faster response to process deviations. This directly contributes to improved safety, reduced equipment downtime, and minimized production losses.', 'functional_area': 'Alarms and Events Management', 'story_theme': 'Real-Time Monitoring'}, 'acceptance_criteria': [{'criteria_id': 'AC-001', 'scenario': 'Display of a new active alarm', 'scenario_type': 'Happy_Path', 'given': 'I am an Operator logged in and viewing the Active Alarms page', 'when': 'a new alarm condition is triggered on a monitored OPC server', 'then': 'the new alarm appears in the active alarm list within 1 second of being processed by the central plane.', 'validation_notes': 'Use a test OPC server to trigger a new alarm. Verify its appearance in the UI and measure the latency from the server event to the UI update.'}, {'criteria_id': 'AC-002', 'scenario': 'Required information in the alarm list', 'scenario_type': 'Happy_Path', 'given': 'an alarm is displayed in the active alarm list', 'when': 'I view the alarm row', 'then': "it must display the following columns: Priority, Timestamp (event time), Source (Asset/Tag Name), Condition (e.g., 'High High'), and Current Value.", 'validation_notes': 'Inspect the alarm list UI to ensure all specified data fields are present and correctly populated for each alarm.'}, {'criteria_id': 'AC-003', 'scenario': 'Default sorting order', 'scenario_type': 'Happy_Path', 'given': 'the Active Alarms page is loaded', 'when': 'the alarm list is displayed', 'then': 'the alarms are sorted by Timestamp in descending order (newest first) by default.', 'validation_notes': 'Load the page with multiple active alarms and verify the initial sort order is by the timestamp column, with the most recent alarm at the top.'}, {'criteria_id': 'AC-004', 'scenario': 'Column sorting functionality', 'scenario_type': 'Happy_Path', 'given': 'the active alarm list is displayed with multiple alarms', 'when': "I click on a sortable column header (e.g., 'Priority')", 'then': "the list is re-sorted by that column's values in descending order.", 'validation_notes': "Click the 'Priority' header and verify highest priority alarms are at the top. Click again and verify the order reverses."}, {'criteria_id': 'AC-005', 'scenario': 'Alarm removal upon clearing', 'scenario_type': 'Happy_Path', 'given': 'an alarm is present in the active alarm list', 'when': 'the alarm condition returns to normal on the OPC server', 'then': 'the alarm is removed from the active alarm list view.', 'validation_notes': 'Trigger an alarm on a test server, verify it appears. Then, clear the alarm condition on the server and verify it is removed from the active list UI.'}, {'criteria_id': 'AC-006', 'scenario': 'Handling connection loss to the data source', 'scenario_type': 'Error_Condition', 'given': 'I am viewing the active alarm list', 'when': 'the connection between the web UI and the backend service is lost', 'then': "a clear visual indicator (e.g., a banner or overlay) is displayed stating 'Connection lost, data may be stale'.", 'validation_notes': 'Use browser developer tools to simulate a network disconnection and verify the stale data indicator appears promptly.'}, {'criteria_id': 'AC-007', 'scenario': 'Performance during an alarm flood', 'scenario_type': 'Edge_Case', 'given': 'the system experiences a high volume of new alarms (>100 per minute)', 'when': 'I am viewing the active alarm list', 'then': 'the UI remains responsive to user input (sorting, filtering) and does not freeze.', 'validation_notes': 'Use a test script to generate a high volume of alarms and perform UI actions to ensure responsiveness is maintained. The list should use pagination or virtual scrolling.'}, {'criteria_id': 'AC-008', 'scenario': 'Read-only access for Viewer role', 'scenario_type': 'Alternative_Flow', 'given': "I am logged in as a user with the 'Viewer' role", 'when': 'I navigate to the Active Alarms page', 'then': 'I can see the list of active alarms, but interactive elements for acknowledging or shelving alarms are not visible or are disabled.', 'validation_notes': 'Log in as a Viewer and confirm the alarm list is visible but action buttons are absent.'}], 'user_interface_requirements': {'ui_elements': ['A data grid or table to display the list of alarms.', 'Sortable column headers for Priority, Timestamp, and Source.', 'Filter controls (e.g., dropdowns, text search) for Priority and Source.', 'Pagination or virtual scrolling controls for handling large numbers of alarms.', 'A visual indicator for connection status/data staleness.'], 'user_interactions': ['Clicking a column header sorts the list.', 'Using filter controls updates the list to show only matching alarms.', 'Scrolling through the list of alarms.'], 'display_requirements': ['The list must update in real-time without requiring a manual page refresh.', 'Alarm priorities must be visually distinct using a color-coding scheme (e.g., Critical/Red, High/Orange, Medium/Yellow, Low/Blue).', "Timestamps should be displayed in the user's local time zone or a configurable system-wide time zone."], 'accessibility_needs': ['The alarm list must be navigable using a keyboard.', 'Color-coding for priority must be supplemented with text or icons to be accessible to color-blind users, compliant with WCAG 2.1 AA.']}, 'business_rules': [{'rule_id': 'BR-001', 'rule_description': "Only alarms in an 'Active' and 'Unacknowledged' state are displayed on this screen.", 'enforcement_point': 'Backend service query that populates the alarm list.', 'violation_handling': 'Alarms in other states (e.g., Cleared, Acknowledged, Shelved) are filtered out and will not be sent to the UI for this view.'}], 'dependencies': {'prerequisite_stories': [{'story_id': 'US-018', 'dependency_reason': 'A connection to an OPC UA server is required to subscribe to and receive alarm events.'}, {'story_id': 'REQ-BIZ-001', 'dependency_reason': "The system must support the 'Operator' and 'Viewer' roles defined in the RBAC model."}, {'story_id': 'REQ-FR-003', 'dependency_reason': 'The underlying system must implement support for the OPC Alarms and Conditions (A&C) specification to receive alarms.'}], 'technical_dependencies': ['A real-time messaging service (e.g., SignalR) for pushing updates from the backend to the web client.', "OPC Core Client's ability to create and manage OPC A&C subscriptions.", 'Central Management Plane service to ingest alarm events from Core Clients.'], 'data_dependencies': ['A configured connection to an OPC server capable of generating alarms.', 'Configuration specifying which assets/tags are being monitored for alarm conditions.'], 'external_dependencies': []}, 'non_functional_requirements': {'performance': ['End-to-end latency for a new alarm to appear in the UI shall be less than 1 second under nominal load.', 'The alarm page initial load time shall be under 3 seconds with up to 1,000 active alarms.', 'UI must remain responsive during an alarm flood of up to 200 new alarms per minute.'], 'security': ['Users can only view alarms for assets/areas they are permitted to see based on their RBAC configuration.'], 'usability': ['The alarm list must be clear and easy to scan, with critical information immediately apparent.'], 'accessibility': ['The feature must comply with Web Content Accessibility Guidelines (WCAG) 2.1 Level AA.'], 'compatibility': ['The feature must function correctly on all supported browsers (Chrome, Firefox, Edge, Safari).']}, 'implementation_considerations': {'complexity_assessment': 'Medium', 'complexity_factors': ['Implementing a robust, low-latency, real-time data pipeline from the edge to the web UI.', 'Efficient frontend state management to handle high-frequency updates without performance degradation.', 'Correct implementation of the OPC A&C subscription model.', 'Backend service must be designed to scale for many clients and high alarm volumes.'], 'technical_risks': ['Network latency between the OPC Core Client and the Central Management Plane could delay alarm notifications.', 'An inefficient frontend implementation could lead to browser performance issues during an alarm flood.'], 'integration_points': ['OPC Core Client (data source).', 'Backend real-time messaging service (e.g., SignalR Hub).', 'Frontend UI components.']}, 'testing_requirements': {'testing_types': ['Unit', 'Integration', 'E2E', 'Performance', 'Accessibility'], 'test_scenarios': ["Verify a single alarm's lifecycle: trigger, appear in UI, clear, disappear from UI.", 'Test column sorting for all sortable columns (ascending and descending).', 'Test filtering by priority and source name.', 'Simulate an alarm flood to test UI responsiveness and backend scalability.', 'Simulate network disconnection and reconnection to verify UI state updates correctly.', 'Verify role-based access for Operator vs. Viewer.'], 'test_data_needs': ['Access to a configurable OPC UA simulation server that can generate alarms with different priorities, types, and frequencies.', "User accounts with 'Operator' and 'Viewer' roles."], 'testing_tools': ['xUnit/Moq (Backend Unit Tests)', 'Vitest/React Testing Library (Frontend Unit Tests)', 'Playwright (E2E Tests)', 'A custom script or tool to simulate an OPC server and generate alarm floods.']}, 'definition_of_done': ['All acceptance criteria validated and passing', 'Code reviewed and approved by at least one other developer', 'Unit test coverage for new code meets the 80% project standard', 'Integration testing of the edge-to-UI alarm pipeline is completed successfully', 'E2E tests in Playwright are created and passing', 'Performance under simulated alarm flood conditions is verified and meets requirements', 'UI/UX review completed, including checks for light/dark themes and responsiveness', 'Accessibility audit passed against WCAG 2.1 AA standards', 'Feature documentation for the user manual is drafted', 'Story deployed and verified in the staging environment by QA'], 'planning_information': {'story_points': '8', 'priority': 'High', 'sprint_considerations': ['This is a foundational feature for operators and a prerequisite for other alarm management stories (US-008, US-010). It should be prioritized early in the development lifecycle.', 'Requires coordination between frontend, backend, and edge client development efforts.'], 'release_impact': 'This is a core feature for the Minimum Viable Product (MVP). The product cannot be released to operators without this functionality.'}}