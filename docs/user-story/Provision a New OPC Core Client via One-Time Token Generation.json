{'story_metadata': {'story_id': 'US-068', 'elaboration_date': '2025-01-24', 'development_readiness': 'Complete'}, 'story_narrative': {'title': 'Provision a New OPC Core Client via One-Time Token Generation', 'as_a_user_story': 'As an Administrator, I want to generate a secure, time-limited, one-time registration token from the Central Management Plane so that I can securely onboard a new OPC Core Client instance, ensuring it is correctly associated with my tenant and preventing unauthorized connections.', 'user_persona': 'Administrator, as defined in REQ-USR-001, responsible for system setup and client instance management.', 'business_value': 'Enhances system security by providing a secure, auditable, and scalable mechanism for onboarding new edge clients. This prevents unauthorized client connections and forms a critical part of the zero-trust architecture for the distributed system.', 'functional_area': 'System Administration & Security', 'story_theme': 'Centralized Client Management'}, 'acceptance_criteria': [{'criteria_id': 'AC-001', 'scenario': 'Successful generation of a new registration token', 'scenario_type': 'Happy_Path', 'given': "an Administrator is logged into the Central Management Plane and is viewing the 'Client Instances' page", 'when': "the Administrator clicks the 'Provision New Client' button", 'then': "a new client entry is created and displayed in the client list with a 'Pending Registration' status", 'and': 'the token generation event is recorded in the audit trail, including the generating user and timestamp, as per REQ-FR-005.'}, {'criteria_id': 'AC-002', 'scenario': 'Token expiration before use', 'scenario_type': 'Edge_Case', 'given': 'a registration token has been generated and its configured lifetime (e.g., 24 hours) has passed', 'and': 'the token is marked as invalid in the system and cannot be used for registration.', 'when': "the system's scheduled task for checking token validity runs OR an administrator views the client list", 'then': "the status of the corresponding client instance in the UI is updated from 'Pending Registration' to 'Registration Expired'"}, {'criteria_id': 'AC-003', 'scenario': 'Attempted registration with an already used token', 'scenario_type': 'Error_Condition', 'given': 'a registration token has been successfully used to provision an OPC Core Client', 'when': 'another client attempts to register using the same token', 'then': "the Central Management Plane rejects the registration request with a '409 Conflict' or similar error, indicating the token is already used", 'and': 'this failed registration attempt is logged as a security event.'}, {'criteria_id': 'AC-004', 'scenario': 'Attempted registration with an expired token', 'scenario_type': 'Error_Condition', 'given': "a registration token's validity period has expired", 'when': 'an OPC Core Client attempts to register using that token', 'then': "the Central Management Plane rejects the registration request with a '401 Unauthorized' or similar error, indicating the token is expired", 'and': 'this failed registration attempt is logged as a security event.'}, {'criteria_id': 'AC-005', 'scenario': 'Token is tenant-isolated', 'scenario_type': 'Happy_Path', 'given': 'an Administrator for Tenant A generates a registration token', 'when': 'the system stores the token', 'then': "the token is explicitly associated with Tenant A's `tenant_id` in the database", 'and': "only administrators within Tenant A can see the 'Pending Registration' client instance."}], 'user_interface_requirements': {'ui_elements': ["A 'Provision New Client' button on the client management/list page.", 'A modal dialog to display the generated token and its expiration.', "A 'Copy to Clipboard' icon/button within the modal.", "A 'Status' column in the client list table to display 'Pending Registration', 'Registration Expired', etc."], 'user_interactions': ["Clicking 'Provision New Client' opens the token display modal.", "Clicking the 'Copy' button copies the token string to the user's clipboard and provides visual feedback (e.g., a tooltip saying 'Copied!')."], 'display_requirements': ['The token must be displayed in a fixed-width font for clarity.', "The expiration time must be displayed in a human-readable format (e.g., 'Expires on 2025-01-25 at 14:30 UTC')."], 'accessibility_needs': ['The modal must be keyboard-navigable.', "The 'Copy' button must have an appropriate ARIA label.", 'The token text itself should be accessible to screen readers.']}, 'business_rules': [{'rule_id': 'BR-001', 'rule_description': 'A registration token must be single-use. Once used for a successful client registration, it is immediately and permanently invalidated.', 'enforcement_point': 'Backend registration validation service.', 'violation_handling': 'Reject the registration attempt with an error and log the event.'}, {'rule_id': 'BR-002', 'rule_description': 'A registration token must have a configurable, finite lifetime. The system default is 24 hours.', 'enforcement_point': 'Backend registration validation service and a scheduled background job for cleanup.', 'violation_handling': 'Reject registration attempts with expired tokens. The background job updates the status of clients whose tokens have expired.'}], 'dependencies': {'prerequisite_stories': [{'story_id': 'US-048', 'dependency_reason': 'An Administrator role with appropriate permissions must exist to perform this action.'}, {'story_id': 'US-050', 'dependency_reason': 'A centralized client management page/dashboard must exist to host the UI for this feature.'}, {'story_id': 'US-014', 'dependency_reason': 'The audit trail system must be in place to log the token generation event for compliance and security.'}], 'technical_dependencies': ['A backend microservice for managing client lifecycle and identity.', 'A database schema (e.g., in PostgreSQL) to store tokens, their status, expiration, and associated tenant/client IDs.', 'A secure random number generator for token creation.', 'The centralized Identity Provider (Keycloak) for authenticating the administrator.'], 'data_dependencies': ["Requires the `tenant_id` from the authenticated Administrator's session to correctly scope the new client."], 'external_dependencies': ['This story is a blocker for the corresponding client-side story where the OPC Core Client uses this token to register itself.']}, 'non_functional_requirements': {'performance': ['The token generation API endpoint (`POST /api/v1/clients/provision`) must have a P95 latency of less than 200ms.'], 'security': ['Tokens must be generated using a cryptographically secure pseudo-random number generator (CSPRNG).', 'Tokens must have sufficient length and entropy to be unguessable.', 'Tokens must be stored securely in the database (e.g., hashed).', "The API endpoint must be protected and only accessible by users with the 'Administrator' role.", 'All token-related actions (generation, successful use, failed attempts) must be logged in the audit trail as per REQ-FR-005 and REQ-NFR-003.'], 'usability': ['The process of generating and copying the token should be intuitive and require minimal steps.'], 'accessibility': ['The UI must comply with WCAG 2.1 Level AA standards.'], 'compatibility': ['The UI must function correctly on all supported modern web browsers (Chrome, Firefox, Edge, Safari).']}, 'implementation_considerations': {'complexity_assessment': 'Medium', 'complexity_factors': ['Security-critical nature of token generation and validation logic.', 'Requires state management for the token lifecycle (pending, used, expired).', 'Involves frontend (React modal), backend (API endpoint), and database (new table/schema) changes.', 'Need for a background job or scheduled task to handle token expiration.'], 'technical_risks': ['Insecure token implementation could create a major system vulnerability.', 'Potential for race conditions during token validation if not handled atomically.', 'Incorrect handling of time zones for token expiration could lead to premature or delayed expiry.'], 'integration_points': ['Identity Provider (Keycloak) for user role verification.', 'Audit Log Service to record the generation event.', 'Database for token persistence.', 'The future client registration endpoint which will consume and validate these tokens.']}, 'testing_requirements': {'testing_types': ['Unit', 'Integration', 'E2E', 'Security'], 'test_scenarios': ['Verify an Admin can generate a token and it appears in the UI.', 'Verify the token can be copied to the clipboard.', "Verify the client status is 'Pending Registration' after generation.", 'Simulate a client registration with a valid token (requires the registration endpoint).', 'Simulate a client registration with an expired token and verify rejection.', 'Simulate a client registration with a used token and verify rejection.', 'Verify the audit log contains the correct entry after token generation.'], 'test_data_needs': ['An active Administrator user account.', 'Test accounts for different tenants to verify data isolation.'], 'testing_tools': ['xUnit/Moq for backend unit tests.', 'Vitest/React Testing Library for frontend unit tests.', 'Playwright for E2E tests.', 'A security scanning tool (e.g., OWASP ZAP) to probe the new endpoint.']}, 'definition_of_done': ['All acceptance criteria validated and passing', 'Code reviewed and approved by at least two peers', 'Unit test coverage for new logic is at or above 80%', 'Integration tests for the API endpoint and database interaction are implemented and passing', 'E2E test scenario for token generation is automated and passing', 'Security review of the token generation and validation mechanism is complete', 'UI components are responsive and meet accessibility standards', 'API endpoint is documented in the OpenAPI specification', 'The feature is deployed and verified in the staging environment'], 'planning_information': {'story_points': '5', 'priority': 'High', 'sprint_considerations': ['This is a foundational security feature and a blocker for onboarding any new clients.', 'The client-side implementation should be planned for a subsequent sprint.'], 'release_impact': ['This feature is essential for the initial release (MVP) as it enables system expansion.']}}