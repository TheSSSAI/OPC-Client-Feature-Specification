{'story_metadata': {'story_id': 'US-017', 'elaboration_date': '2025-01-18', 'development_readiness': 'Complete'}, 'story_narrative': {'title': 'Configure Connection to a Legacy OPC DA Server', 'as_a_user_story': 'As an Engineer, I want to configure and manage a connection to a legacy OPC DA server from an OPC Core Client running on a Windows machine, so that I can integrate data from older industrial equipment into the central management system for unified monitoring and analysis.', 'user_persona': 'Engineer (responsible for configuring data sources, as per REQ-USR-001)', 'business_value': "Enables data integration from legacy industrial systems that only support the OPC DA protocol. This expands the platform's applicability to brownfield environments, increasing market reach and preventing customers from needing costly equipment upgrades.", 'functional_area': 'Data Source Management', 'story_theme': 'Core OPC Connectivity'}, 'acceptance_criteria': [{'criteria_id': 'AC-001', 'scenario': 'Successfully add and connect to a valid OPC DA server', 'scenario_type': 'Happy_Path', 'given': 'I am an Engineer logged into the Central Management Plane and viewing the configuration page for an OPC Core Client that is running on a Windows OS', 'when': "I navigate to the 'Data Sources' section, select 'Add OPC DA Server', enter a valid Hostname and ProgID for an accessible server, and click 'Test Connection'", 'then': "The system displays a 'Connection Successful' message within 15 seconds.", 'validation_notes': 'Requires a test environment with a Windows-based OPC Core Client and a running OPC DA test server (e.g., Matrikon Simulation Server).'}, {'criteria_id': 'AC-002', 'scenario': 'Save a successfully tested OPC DA connection', 'scenario_type': 'Happy_Path', 'given': 'I have successfully tested a new OPC DA server connection', 'when': "I enter a unique 'Connection Name' and click 'Save'", 'then': "The configuration is pushed to the OPC Core Client, and the new connection appears in the list of Data Sources with a 'Connected' status.", 'validation_notes': 'Verify the connection appears in the UI list and that the client logs confirm receipt and application of the new configuration.'}, {'criteria_id': 'AC-003', 'scenario': 'Attempt to connect with an invalid or unreachable hostname', 'scenario_type': 'Error_Condition', 'given': "I am on the 'Add OPC DA Server' configuration form", 'when': "I enter a hostname that is syntactically valid but unreachable on the network and click 'Test Connection'", 'then': "The system displays a specific error message, such as 'Error: Hostname not found or server is unreachable.'", 'validation_notes': 'Test with a non-existent IP address or a valid IP where the target port is blocked.'}, {'criteria_id': 'AC-004', 'scenario': 'Attempt to connect with an incorrect ProgID', 'scenario_type': 'Error_Condition', 'given': "I am on the 'Add OPC DA Server' configuration form and have entered a valid hostname", 'when': "I enter a ProgID that does not exist on the target server and click 'Test Connection'", 'then': "The system displays a specific error message, such as 'Error: OPC DA Server with ProgID [ProgID] not found on host [Hostname].'", 'validation_notes': 'Use a valid test server and attempt to connect with a deliberately misspelled or non-existent ProgID.'}, {'criteria_id': 'AC-005', 'scenario': 'Attempt to connect when DCOM permissions are incorrect', 'scenario_type': 'Error_Condition', 'given': "I am on the 'Add OPC DA Server' configuration form with valid server details", 'when': "I click 'Test Connection' to a server with restrictive DCOM security settings", 'then': "The system displays a specific error message indicating a potential DCOM issue, such as 'Error: Access Denied. Please check DCOM configuration and user permissions on the target server.'", 'validation_notes': "This requires configuring a test OPC DA server with DCOM settings that explicitly deny access to the client's user account."}, {'criteria_id': 'AC-006', 'scenario': 'Attempt to add an OPC DA connection for a Linux-based client', 'scenario_type': 'Edge_Case', 'given': 'I am an Engineer logged into the Central Management Plane and viewing the configuration page for an OPC Core Client that is running on a Linux OS', 'when': "I navigate to the 'Data Sources' section", 'then': "The option to 'Add OPC DA Server' is not visible or is disabled.", 'validation_notes': 'Verify the UI logic correctly identifies the client OS and conditionally renders the option. A tooltip should explain the Windows-only limitation.'}], 'user_interface_requirements': {'ui_elements': ['A form for adding/editing an OPC DA connection.', "Input field: 'Connection Name' (text, required, unique per client).", "Input field: 'Hostname or IP Address' (text, required).", "Input field: 'ProgID' (text, required).", "Button: 'Test Connection' with loading/spinner state.", "Button: 'Save'.", "Button: 'Cancel'.", 'A list view of configured data sources showing Name, Type (OPC DA), and Status (Connected, Disconnected, Error).'], 'user_interactions': ["The 'Save' button should be disabled until a connection is successfully tested.", "Clicking 'Test Connection' provides immediate visual feedback.", 'Error messages are displayed clearly to the user near the relevant fields or as a notification.', 'Editing an existing connection pre-populates the form fields.'], 'display_requirements': ['The UI must clearly indicate that this feature is only available for OPC Core Clients running on Windows.', 'Connection status in the list view must update in near real-time.'], 'accessibility_needs': ['All form fields must have associated labels.', 'Error messages must be associated with their respective inputs for screen readers.', 'UI must adhere to WCAG 2.1 Level AA standards as per REQ-IFC-001.']}, 'business_rules': [{'rule_id': 'BR-001', 'rule_description': 'OPC DA connections can only be configured for and established by OPC Core Client instances deployed on a Windows operating system.', 'enforcement_point': 'Central Management Plane UI (disabling the option) and backend (validating before saving configuration).', 'violation_handling': 'The UI prevents the user from attempting to configure. The backend rejects any API call that attempts to assign an OPC DA source to a non-Windows client.'}], 'dependencies': {'prerequisite_stories': [{'story_id': 'US-050', 'dependency_reason': 'This story provides the central dashboard to view and select a specific client instance for configuration.'}, {'story_id': 'US-051', 'dependency_reason': 'This story implements the core mechanism for pushing configuration changes from the Central Management Plane to the distributed OPC Core Client, which is essential for this feature to work.'}], 'technical_dependencies': ["A .NET library for OPC DA client communication must be included in the OPC Core Client's Windows build.", "The OPC Core Client's build and deployment pipeline must support OS-specific dependencies.", 'The secure communication channel (gRPC/MQTT) between the central plane and the client must be operational.'], 'data_dependencies': ["The system must have a record of each OPC Core Client's operating system to enforce the Windows-only rule."], 'external_dependencies': ['Requires access to a test environment with one or more OPC DA servers for development and QA.']}, 'non_functional_requirements': {'performance': ["The 'Test Connection' operation must time out and return a response to the user within 15 seconds."], 'security': ['Connection configuration details pushed from the central plane to the client must be transmitted over the encrypted channel (mTLS/TLS) defined in REQ-ARC-001.'], 'usability': ['Error messages related to connection failures, especially DCOM issues, should be as descriptive as possible and suggest potential user actions for troubleshooting.'], 'accessibility': ['The configuration form must be fully keyboard-navigable.'], 'compatibility': ['The OPC Core Client must be running on a supported Windows version (Windows 10/11, Windows Server 2019+) as per REQ-ENV-001.']}, 'implementation_considerations': {'complexity_assessment': 'Medium', 'complexity_factors': ['Interfacing with COM/DCOM from .NET can be complex and requires careful management of interop libraries.', 'Troubleshooting DCOM is notoriously difficult and depends on the network environment, firewalls, and user permissions, making robust error handling a primary challenge.', 'Requires OS-specific logic and dependencies within the OPC Core Client application.'], 'technical_risks': ['Underestimating the effort required to create user-friendly troubleshooting guides for DCOM configuration issues.', 'Incompatibility with certain older or non-standard OPC DA servers.'], 'integration_points': ['Central Management Plane (React Frontend and .NET Backend).', 'OPC Core Client (Windows Service in .NET).', 'External OPC DA Servers (via DCOM).']}, 'testing_requirements': {'testing_types': ['Unit', 'Integration', 'E2E', 'Manual'], 'test_scenarios': ['Verify successful connection to a local OPC DA server.', 'Verify successful connection to a remote OPC DA server on the same network.', 'Verify failure scenarios: wrong IP, wrong ProgID, firewall blocking, DCOM permissions denied.', 'Verify the UI correctly hides/disables the feature for Linux clients.', 'Verify editing and deleting an existing OPC DA connection.'], 'test_data_needs': ['A list of valid Hostnames and ProgIDs for test servers.', 'A dedicated Windows machine to host the OPC Core Client for testing.', 'Access to at least one standard OPC DA simulation server.'], 'testing_tools': ['Playwright for E2E tests.', 'xUnit/Moq for backend unit tests.', 'Vitest/React Testing Library for frontend unit tests.', 'An OPC DA simulation server (e.g., Matrikon, Kepware).']}, 'definition_of_done': ['All acceptance criteria validated and passing', 'Code reviewed and approved by at least one other developer', 'Unit tests implemented for all new logic, maintaining >= 80% coverage', 'Integration testing against a live OPC DA test server completed successfully', 'E2E test script for the happy path scenario is created and passing', 'User interface reviewed for usability and adherence to design standards', 'Connection timeout performance requirement verified', 'Security of configuration push mechanism validated', 'User documentation updated with a guide on how to configure OPC DA connections, including a DCOM troubleshooting section', 'Story deployed and verified in the staging environment'], 'planning_information': {'story_points': '8', 'priority': 'High', 'sprint_considerations': ['The availability of a stable test environment with a Windows client and a configurable OPC DA server is a prerequisite for starting development.', 'This story is blocked by US-051 (Remote Configuration Push).', 'Allocate time for researching and selecting the appropriate .NET library for OPC DA communication.'], 'release_impact': 'This is a key feature for interoperability with legacy systems and is critical for adoption in many industrial environments. Its inclusion is necessary for pilots in brownfield sites.'}}