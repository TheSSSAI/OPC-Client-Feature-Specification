version: '3.8'

services:
  # Asset & Topology API Service
  assettopology.api:
    image: ${DOCKER_REGISTRY-}assettopologyapi
    container_name: asettopology.api
    build:
      context: .
      dockerfile: src/AssetTopology.Api/Dockerfile
    ports:
      - "8081:8080" # Map host port 8081 to container port 8080
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__Postgres=Host=postgres;Database=asset_topology_db;Username=user;Password=password
      - ConnectionStrings__Redis=redis:6379
      - Jwt__Authority=http://keycloak:8080/realms/opc-ua-realm
    depends_on:
      - postgres
      - redis
      - keycloak
    networks:
      - opc-platform-net

  # PostgreSQL Database for Asset & Topology Service
  postgres:
    image: postgres:16
    container_name: postgres_asset
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=asset_topology_db
    volumes:
      - postgres_data_asset:/var/lib/postgresql/data
    ports:
      - "5433:5432" # Map host port 5433 to container port 5432 to avoid conflicts
    networks:
      - opc-platform-net

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: redis_cache
    ports:
      - "6379:6379"
    networks:
      - opc-platform-net

  # Keycloak Identity Provider (shared service)
  keycloak:
    image: quay.io/keycloak/keycloak:25.0
    container_name: keycloak_idp
    command: start-dev --import-realm
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL_HOST=keycloak_db
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=password
      - KC_HTTP_ENABLED=true
      - KC_HTTP_PORT=8080
    volumes:
      - ./config/keycloak/realm-export.json:/opt/keycloak/data/import/realm.json
    ports:
      - "8080:8080"
    depends_on:
      - keycloak_db
    networks:
      - opc-platform-net

  keycloak_db:
    image: postgres:16
    container_name: keycloak_db
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=password
    volumes:
      - keycloak_db_data:/var/lib/postgresql/data
    networks:
      - opc-platform-net

# Volumes definition
volumes:
  postgres_data_asset:
  keycloak_db_data:

# Network definition
networks:
  opc-platform-net:
    driver: bridge